Conflict in state 8 between rule 4 and token '+' resolved as reduce.
Conflict in state 8 between rule 4 and token '*' resolved as shift.
Conflict in state 9 between rule 5 and token '+' resolved as reduce.
Conflict in state 9 between rule 5 and token '*' resolved as reduce.


Terminals which are not used:

   INT
   '-'
   '/'


Grammar

  Number, Line, Rule
    1  29 task -> task expr '\n'
    2  33 task -> task '\n'
    3  34 task -> /* empty */
    4  36 expr -> expr '+' expr
    5  41 expr -> expr '*' expr
    6  46 expr -> ID


Terminals, with rules where they appear

$ (-1)
'\n' (10) 1 2
'*' (42) 5
'+' (43) 4
'-' (45)
'/' (47)
error (256)
INT (257)
ID (258) 6


Nonterminals, with rules where they appear

task (10)
    on left: 1 2 3, on right: 1 2
expr (11)
    on left: 4 5 6, on right: 1 4 5


state 0

    $default	reduce using rule 3 (task)

    task	go to state 1



state 1

    task  ->  task . expr '\n'   (rule 1)
    task  ->  task . '\n'   (rule 2)

    $   	go to state 10
    ID  	shift, and go to state 2
    '\n'	shift, and go to state 3

    expr	go to state 4



state 2

    expr  ->  ID .   (rule 6)

    $default	reduce using rule 6 (expr)



state 3

    task  ->  task '\n' .   (rule 2)

    $default	reduce using rule 2 (task)



state 4

    task  ->  task expr . '\n'   (rule 1)
    expr  ->  expr . '+' expr   (rule 4)
    expr  ->  expr . '*' expr   (rule 5)

    '+' 	shift, and go to state 5
    '*' 	shift, and go to state 6
    '\n'	shift, and go to state 7



state 5

    expr  ->  expr '+' . expr   (rule 4)

    ID  	shift, and go to state 2

    expr	go to state 8



state 6

    expr  ->  expr '*' . expr   (rule 5)

    ID  	shift, and go to state 2

    expr	go to state 9



state 7

    task  ->  task expr '\n' .   (rule 1)

    $default	reduce using rule 1 (task)



state 8

    expr  ->  expr . '+' expr   (rule 4)
    expr  ->  expr '+' expr .   (rule 4)
    expr  ->  expr . '*' expr   (rule 5)

    '*' 	shift, and go to state 6

    $default	reduce using rule 4 (expr)



state 9

    expr  ->  expr . '+' expr   (rule 4)
    expr  ->  expr . '*' expr   (rule 5)
    expr  ->  expr '*' expr .   (rule 5)


    $default	reduce using rule 5 (expr)



state 10

    $   	go to state 11



state 11

    $default	accept


